{"version":3,"sources":["components/Burger/Ingredient/Ingredient.module.css","components/Navigation/Sidebar/SideDrawer.module.css","components/UI/Button/Button.module.css","newStyle.module.css","assets/images/burger-logo_edited.jpg","components/Layout/Layout.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Sidebar/SideDrawer.js","components/UI/Button/Hamburger.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Layout.js","axios-burgerOrders.js","components/PastOrders/PastOrder.js","components/UI/Spinner/Spinner.js","components/PastOrders/PastOrders.js","store/actions/authAction.js","store/actions/actionTypes.js","store/actions/orderAction.js","components/Burger/constants.js","components/Auth/Auth.js","components/Burger/BuildControls/ButtonControl/ButtonControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/Ingredient/Ingredient.js","components/Burger/Burger.js","components/Burger/OrderSummary/OrderDetails.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Modal/Modal.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerAction.js","components/Order/BurgerOrder.js","components/Order/ContactPage.js","containers/Checkout/Checkout.js","components/Auth/Logout.js","App.js","serviceWorker.js","store/reducers/orderReducer.js","store/reducers/burgerReducer.js","store/reducers/authReducer.js","index.js"],"names":["module","exports","Logo","className","src","burgerLogo","alt","NavigationItem","props","to","linkAddress","exact","linkActive","children","NavigationItems","isAuthenticated","BackDrop","onClick","cancelOrder","SideDrawer","sidebarClasses","classes","Sidebar","Close","join","showSideDrawer","Open","closeSideDrawer","SidebarLogo","Hamburger","Toolbar","style","display","alignItems","Layout","state","isSideDrawerOpen","openSideDrawer","setState","this","Content","Component","connect","authReducer","token","instance","Axios","create","baseURL","PastOrder","ingredientsList","ing","ingredients","push","name","quantity","map","key","orderId","totalPrice","toFixed","Spinner","divStyle","position","left","top","transform","padding","fontWeight","PastOrders","orderList","isLoading","isError","queryParams","userId","axios","get","then","response","pastOrderList","data","id","catch","error","errorMessage","boxShadow","border","spinner","order","logOut","localStorage","removeItem","type","checkTokenTimeout","expiresIn","dispatch","setTimeout","authSuccess","purchaseBurgerSuccess","orderData","purchaseBurgerFailed","INGREDIENT_PRICES","cheese","salad","bacon","meat","validEmailRegex","RegExp","errors","userName","userPassword","validation","Auth","inputChangeHandler","event","inputName","target","value","validationCheck","inputValue","length","test","isValid","Object","entries","isFormValid","submitForm","preventDefault","onAuthenticate","isSignUp","switchToSignUp","prevState","primaryButton","secondaryButton","errorSummary","message","form","onSubmit","placeholder","onChange","required","userPasswordname","height","margin","marginTop","authRedirect","initializeBurger","burgerReducer","email","password","authData","returnSecureToken","url","post","idToken","localId","expiresAt","Date","getTime","setItem","authFailed","authenticate","ButtonControl","ingredientLabel","moreClick","lessClick","disabled","disableIngredient","ingredientControls","ingredientType","BurgerControls","buttonCaption","orderReady","totalAmount","element","addIngredient","removeIngredient","burgerOrderHandle","Ingredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","keys","Array","_","index","reduce","newArray","item","concat","styleOrderBurger","orderPage","ingredientList","amount","orderSummaryList","textTransform","textAlign","listStyle","color","Button","buttonType","clickHandler","OrderSummary","burgerPurchase","Modal","orderBurger","BurgerBuilder","burgerOrderHandler","history","burgerCancelHandler","burgerPurchaseHandler","initIngredients","isIngredientDisabled","orderSummary","burgerAmount","ingredientName","BurgerOrder","clickContinue","clickCancel","address","phone","ContactPage","burgerOrder","customer","customerName","customerAddress","customerEmail","customerPhone","deliveryType","purchaseBurger","purchaseSuccess","orderReducer","purchased","Checkout","goBack","replace","purchaseRedirect","path","component","Logout","signOut","App","authUserValid","routes","Appheader","withRouter","getItem","Boolean","window","location","hostname","match","initialState","orders","action","newOrder","composeEnhancers","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.977b7a0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"Ingredient_BreadBottom__22AEh\",\"BreadTop\":\"Ingredient_BreadTop__18eaD\",\"Seeds1\":\"Ingredient_Seeds1__KxaJ9\",\"Seeds2\":\"Ingredient_Seeds2__2xV4z\",\"Meat\":\"Ingredient_Meat__3vzWf\",\"Cheese\":\"Ingredient_Cheese__pR2MT\",\"Salad\":\"Ingredient_Salad__2LOxd\",\"Bacon\":\"Ingredient_Bacon__1Y998\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"SideDrawer_Sidebar__8GwVW\",\"Open\":\"SideDrawer_Open__e1E-P\",\"Close\":\"SideDrawer_Close__3VDYN\",\"SidebarLogo\":\"SideDrawer_SidebarLogo__P1ods\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Aomdy\",\"Success\":\"Button_Success__3Jzhf\",\"Danger\":\"Button_Danger__326Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"newStyle_App__1Gb1h\",\"App-header\":\"newStyle_App-header__3FpV1\",\"newDiv\":\"newStyle_newDiv__2yFg9\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo_edited.a41a846a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2TCuh\"};","import React from \"react\";\r\nimport burgerLogo from \"../../assets/images/burger-logo_edited.jpg\";\r\nimport \"./Logo.css\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"Logo\">\r\n      <img className=\"Logo-img\" src={burgerLogo} alt=\"logo\" />\r\n      <p className=\"Logo-title\">BURGER WORLD</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavigationItem.css\";\r\n\r\nfunction NavigationItem(props) {\r\n  return (\r\n    <li className=\"NavigationItem\">\r\n      <NavLink\r\n        to={props.linkAddress}\r\n        exact={props.exact}\r\n        className={props.linkActive ? \"active\" : null}\r\n      >\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavigationItem;\r\n","import React from \"react\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\nimport \"./NavigationItems.css\";\r\n\r\nfunction NavigationItems(props) {\r\n  return (\r\n    <ul className=\"NavigationItems\">\r\n      <NavigationItem linkAddress=\"/\" exact>\r\n        Burger Builder\r\n      </NavigationItem>\r\n      {props.isAuthenticated ? (\r\n        <NavigationItem linkAddress=\"/orders\">Orders</NavigationItem>\r\n      ) : null}\r\n      {props.isAuthenticated ? (\r\n        <NavigationItem linkAddress=\"/signout\">Sign out</NavigationItem>\r\n      ) : (\r\n        <NavigationItem linkAddress=\"/auth\">Sign in</NavigationItem>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NavigationItems;\r\n","import React from \"react\";\r\nimport \"./Backdrop.css\";\r\n\r\nfunction BackDrop(props) {\r\n  return <div className=\"Backdrop\" onClick={props.cancelOrder}></div>;\r\n}\r\n\r\nexport default BackDrop;\r\n","import React, { Fragment } from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport classes from \"./SideDrawer.module.css\";\r\n\r\nfunction SideDrawer(props) {\r\n  let sidebarClasses = [classes.Sidebar, classes.Close].join(\" \");\r\n  if (props.showSideDrawer)\r\n    sidebarClasses = [classes.Sidebar, classes.Open].join(\" \");\r\n  return (\r\n    <>\r\n      {props.showSideDrawer ? (\r\n        <Fragment>\r\n          <Backdrop cancelOrder={props.closeSideDrawer} />\r\n          <div className={sidebarClasses} onClick={props.closeSideDrawer}>\r\n            <div className={classes.SidebarLogo}>\r\n              <Logo />\r\n            </div>\r\n            <nav>\r\n              <NavigationItems isAuthenticated={props.isAuthenticated} />\r\n            </nav>\r\n          </div>\r\n        </Fragment>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React from \"react\";\r\nimport \"./Hamburger.css\";\r\n\r\nfunction Hamburger(props) {\r\n  return (\r\n    <div className=\"Container\" onClick={props.showSideDrawer}>\r\n      <div className=\"Hamburger\"></div>\r\n      <div className=\"Hamburger\"></div>\r\n      <div className=\"Hamburger\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hamburger;\r\n","import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport Hamburger from \"../../UI/Button/Hamburger\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport \"./Toolbar.css\";\r\n\r\nfunction Toolbar(props) {\r\n  return (\r\n    <header className=\"Toolbar\">\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Hamburger showSideDrawer={props.showSideDrawer} />\r\n        <Logo />\r\n      </div>\r\n\r\n      <nav className=\"DesktopOnly\">\r\n        <NavigationItems isAuthenticated={props.isAuthenticated} />\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Toolbar;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideDrawer from \"../Navigation/Sidebar/SideDrawer\";\r\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\r\nimport classes from \"./Layout.module.css\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    isSideDrawerOpen: false,\r\n  };\r\n\r\n  openSideDrawer = () => {\r\n    this.setState({\r\n      isSideDrawerOpen: true,\r\n    });\r\n  };\r\n\r\n  closeSideDrawer = () => {\r\n    this.setState({\r\n      isSideDrawerOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Toolbar\r\n          showSideDrawer={this.openSideDrawer}\r\n          isAuthenticated={this.props.isAuthenticated}\r\n        />\r\n        <SideDrawer\r\n          closeSideDrawer={this.closeSideDrawer}\r\n          showSideDrawer={this.state.isSideDrawerOpen}\r\n          isAuthenticated={this.props.isAuthenticated}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n//Redux Store\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.authReducer.token !== null,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Layout);\r\n","import Axios from \"axios\";\r\n\r\nconst instance = Axios.create({\r\n  baseURL: \"https://fire-burger-d017d.firebaseio.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\nimport \"./PastOrder.css\";\r\n\r\nfunction PastOrder(props) {\r\n  //The ingredients are saved in an array from the props\r\n  const ingredientsList = [];\r\n  for (let ing in props.ingredients) {\r\n    ingredientsList.push({\r\n      name: ing,\r\n      quantity: props.ingredients[ing],\r\n    });\r\n  }\r\n\r\n  //Creating element for each Burger ingredients\r\n  const ingredients = ingredientsList.map((ing) => {\r\n    return (\r\n      <span key={ing.name} className=\"past-order-ingredients\">\r\n        {ing.name} ({ing.quantity})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"past-order-container\">\r\n      <p>\r\n        {\" \"}\r\n        <strong>Burger Order Id </strong> {props.orderId}\r\n      </p>\r\n      <p>{ingredients}</p>\r\n      <h4>Price : Rs. {props.totalPrice.toFixed(2)}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PastOrder;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nfunction Spinner() {\r\n  return <div className=\"loader\">Loading...</div>;\r\n}\r\n\r\nexport default Spinner;\r\n","import axios from \"../../axios-burgerOrders\";\r\nimport { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport PastOrder from \"./PastOrder\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\n//Styling the Error message and Spinner\r\nconst divStyle = {\r\n  position: \" absolute\",\r\n  left: \"50%\",\r\n  top: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  padding: \"60px\",\r\n  fontWeight: \"bold\",\r\n};\r\n\r\nclass PastOrders extends Component {\r\n  state = {\r\n    orderList: [],\r\n    isLoading: false,\r\n    isError: false,\r\n  };\r\n\r\n  //Reading the Data from Firebase\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    const token = this.props.token;\r\n    const userId = this.props.userId;\r\n    const queryParams =\r\n      \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n    axios\r\n      .get(\"/burgerOrders.json\" + queryParams)\r\n      .then((response) => {\r\n        const pastOrderList = [];\r\n        for (let key in response.data) {\r\n          pastOrderList.push({\r\n            id: key,\r\n            ...response.data[key],\r\n          });\r\n        }\r\n        this.setState({\r\n          orderList: pastOrderList,\r\n          isLoading: false,\r\n          isError: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        \r\n        this.setState({ isLoading: false, isError: true });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let errorMessage = (\r\n      <div\r\n        style={{\r\n          ...divStyle,\r\n          boxShadow: \"8px 6px brown\",\r\n          border: \"5px solid red\",\r\n        }}\r\n      >\r\n        \"Oops. Something went wrong !\"\r\n      </div>\r\n    );\r\n    let spinner = (\r\n      <div style={divStyle}>\r\n        <Spinner />\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        {this.state.isLoading ? spinner : null}\r\n        {this.state.isError ? errorMessage : null}\r\n        {this.state.orderList.map((order) => (\r\n          <PastOrder\r\n            key={order.id}\r\n            orderId={order.id}\r\n            ingredients={order.ingredients}\r\n            totalPrice={+order.totalPrice}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Redux Store\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.authReducer.token,\r\n    userId: state.authReducer.userId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PastOrders);\r\n","import Axios from \"axios\";\r\nimport {\r\n  AUTH_BEGIN,\r\n  AUTH_FAILED,\r\n  AUTH_SUCCESS,\r\n  AUTH_LOGOUT,\r\n} from \"./actionTypes\";\r\n\r\n//User Log out\r\nexport const logOut = () => {\r\n  //Clears the Local Storage\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"expiresAt\");\r\n  return {\r\n    type: AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\n//Authentication Token Timeout Check\r\nexport const checkTokenTimeout = (expiresIn) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logOut());\r\n    }, expiresIn * 1000);\r\n  };\r\n};\r\n\r\n//Authentication Check begins\r\nexport const authBegin = () => {\r\n  return {\r\n    type: AUTH_BEGIN,\r\n  };\r\n};\r\n\r\n//Authentication Check Success\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token: token,\r\n    userId: userId,\r\n  };\r\n};\r\n\r\n//Authentication Check Fails\r\nexport const authFailed = (error) => {\r\n  return {\r\n    type: AUTH_FAILED,\r\n    error: error,\r\n  };\r\n};\r\n\r\n//Authentication Check\r\nexport const authenticate = (email, password, isSignUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authBegin());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCM6lcstmjwgcebqyk2szhgdQxsEra572w\";\r\n    if (!isSignUp)\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCM6lcstmjwgcebqyk2szhgdQxsEra572w\";\r\n    Axios.post(url, authData)\r\n      .then((response) => {\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkTokenTimeout(response.data.expiresIn));\r\n        //Local Storage for Token\r\n        const expiresAt = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"userId\", response.data.localId);\r\n        localStorage.setItem(\"expiresAt\", expiresAt);\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFailed(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authUserValid = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const expiresAt = new Date(localStorage.getItem(\"expiresAt\"));\r\n    if (!token) {\r\n      dispatch(logOut());\r\n    } else {\r\n      if (expiresAt > new Date()) {\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkTokenTimeout((expiresAt.getTime() - new Date().getTime()) / 1000)\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const INITIALIZE_INGREDIENTS = \"INITIALIZE_INGREDIENTS\";\r\n\r\nexport const PURCHASE_BURGER_BEGIN = \"PURCHASE_BURGER_BEGIN\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAILED = \"PURCHASE_BURGER_FAILED\";\r\n\r\nexport const INITIALIZE_BURGER = \"INITIALIZE_BURGER\";\r\n\r\nexport const AUTH_BEGIN = \"AUTH_BEGIN\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAILED = \"AUTH_FAILED\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n","import {\r\n  PURCHASE_BURGER_SUCCESS,\r\n  PURCHASE_BURGER_FAILED,\r\n  PURCHASE_BURGER_BEGIN,\r\n  INITIALIZE_BURGER,\r\n} from \"./actionTypes\";\r\nimport axios from \"../../axios-burgerOrders\";\r\n\r\n//Handles the Spinner\r\nexport const purchaseBurgerBegin = () => {\r\n  return {\r\n    type: PURCHASE_BURGER_BEGIN,\r\n  };\r\n};\r\n\r\n//Handles a Burger Purchase\r\nexport const purchaseBurger = (orderData, token) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseBurgerBegin());\r\n    axios\r\n      .post(\"/burgerOrders.json?auth=\" + token, orderData)\r\n      .then((response) => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseBurgerFailed(error));\r\n      });\r\n  };\r\n};\r\n\r\n//Handles a Successful Purchase\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    order: orderData,\r\n  };\r\n};\r\n\r\n//Handles a Failed Purchase\r\nexport const purchaseBurgerFailed = (error) => {\r\n  return {\r\n    type: PURCHASE_BURGER_FAILED,\r\n    errorMessage: error,\r\n  };\r\n};\r\n\r\n//This Redirects to Main Page after success Purchase\r\nexport const initializeBurger = () => {\r\n  return {\r\n    type: INITIALIZE_BURGER,\r\n  };\r\n};\r\n","export const BURGER_BASE_PRICE = 50;\r\nexport const INGREDIENT_PRICES = {\r\n  cheese: 1.2,\r\n  salad: 1.5,\r\n  bacon: 2.5,\r\n  meat: 3,\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { authenticate } from \"../../store/actions/authAction\";\r\nimport { initializeBurger } from \"../../store/actions/orderAction\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Auth.css\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { BURGER_BASE_PRICE } from \"../Burger/constants\";\r\n\r\nconst validEmailRegex = RegExp(\r\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n);\r\n\r\n//To display the Error message\r\nconst errors = {\r\n  userName: \"\",\r\n  userPassword: \"\",\r\n};\r\n\r\n//To validate if each input is valid\r\nconst validation = {\r\n  userName: false,\r\n  userPassword: false,\r\n};\r\n\r\nclass Auth extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      userName: \"\",\r\n      userPassword: \"\",\r\n      isFormValid: true,\r\n      isSignUp: true,\r\n    };\r\n  }\r\n\r\n  //Handles the Customer Details in State\r\n  inputChangeHandler = (event) => {\r\n    let inputName = event.target.name;\r\n    this.setState({\r\n      [inputName]: event.target.value,\r\n    });\r\n    this.validationCheck(inputName, event.target.value);\r\n  };\r\n\r\n  //Handles the Validation of each input\r\n  validationCheck = (inputName, inputValue) => {\r\n    switch (inputName) {\r\n      case \"userPassword\":\r\n        errors.userPassword =\r\n          inputValue.length > 5\r\n            ? \"\"\r\n            : \"Password must be at least 6 characters long!\";\r\n        validation.userPassword = errors.userPassword.length > 0 ? false : true;\r\n        break;\r\n      case \"userName\":\r\n        errors.userName = validEmailRegex.test(inputValue)\r\n          ? \"\"\r\n          : \"Email is not valid!\";\r\n        validation.userName = errors.userName.length > 0 ? false : true;\r\n        break;\r\n      default:\r\n        errors.userPassword =\r\n          inputValue.length > 5\r\n            ? \"\"\r\n            : \"Password must be at least 6 characters long!\";\r\n        validation.userPassword = errors.userPassword.length > 0 ? false : true;\r\n        break;\r\n    }\r\n\r\n    //Checks if the whole form is valid\r\n    let isValid = true;\r\n    for (const [key, value] of Object.entries(validation)) {\r\n      isValid = value && isValid;\r\n    }\r\n    this.setState({\r\n      isFormValid: isValid,\r\n    });\r\n  };\r\n\r\n  //Submits the Login Form\r\n  submitForm = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.isFormValid) {\r\n      this.props.onAuthenticate(\r\n        this.state.userName,\r\n        this.state.userPassword,\r\n        this.state.isSignUp\r\n      );\r\n    }\r\n  };\r\n\r\n  //Switches to Signin or SignUp\r\n  switchToSignUp = () => {\r\n    this.setState((prevState) => ({\r\n      isSignUp: !prevState.isSignUp,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    //Sets the Caption on the Button\r\n    let primaryButton = \"Sign up\";\r\n    let secondaryButton = \"Sign in\";\r\n    if (!this.state.isSignUp) {\r\n      primaryButton = \"Sign in\";\r\n      secondaryButton = \"Sign up\";\r\n    }\r\n\r\n    //Error Messages\r\n    let errorMessage = null;\r\n    let errorSummary = null;\r\n    if (this.props.error) {\r\n      errorMessage = this.props.error.message;\r\n      errorSummary = <h4 className=\"error-message\">{errorMessage}</h4>;\r\n    }\r\n\r\n    //SIGN IN FORM\r\n    let form = (\r\n      <form onSubmit={this.submitForm} className=\"auth-container\">\r\n        <div className=\"imgcontainer\">\r\n          <img\r\n            src=\"https://x.dpstatic.com/d/avatars/l/905/905144.jpg?1511195787\"\r\n            alt=\"Avatar\"\r\n            className=\"avatar\"\r\n          />\r\n        </div>\r\n        <div className=\"container\">\r\n          {errorSummary}\r\n          {errors.userName.length > 0 && (\r\n            <label className=\"invalid\">{errors.userName}</label>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Username\"\r\n            value={this.state.userName}\r\n            onChange={this.inputChangeHandler}\r\n            name=\"userName\"\r\n            required\r\n          />\r\n\r\n          {errors.userPassword.length > 0 && (\r\n            <label className=\"invalid\">{errors.userPassword}</label>\r\n          )}\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            name=\"userPassword\"\r\n            value={this.state.userPasswordname}\r\n            onChange={this.inputChangeHandler}\r\n            required\r\n          />\r\n\r\n          <button type=\"submit\" className=\"loginbtn\">\r\n            {primaryButton}\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"loginbtn signin\"\r\n            onClick={this.switchToSignUp}\r\n          >\r\n            {secondaryButton}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n\r\n    //Displays Spinner\r\n    if (this.props.isLoading)\r\n      form = (\r\n        <div className=\"auth-container\">\r\n          <div style={{ height: \"400px\", display: \"flex\" }}>\r\n            <div style={{ margin: \"0 auto\", marginTop: \"100px\" }}>\r\n              <Spinner />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    //Redirects once user is authenticated\r\n    let authRedirect = null;\r\n    if (this.props.isAuthenticated) {\r\n      if (this.props.totalPrice > BURGER_BASE_PRICE) {\r\n        this.props.initializeBurger();\r\n        authRedirect = <Redirect to=\"/checkout\" />;\r\n      } else authRedirect = <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {authRedirect}\r\n        <div className=\"all-container\">{form}</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.authReducer.isLoading,\r\n    error: state.authReducer.error,\r\n    isAuthenticated: state.authReducer.token !== null,\r\n    totalPrice: state.burgerReducer.totalPrice,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    initializeBurger: () => dispatch(initializeBurger()),\r\n    onAuthenticate: (userName, userPassword, isSignUp) =>\r\n      dispatch(authenticate(userName, userPassword, isSignUp)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React from \"react\";\r\nimport \"./ButtonControl.css\";\r\n\r\nfunction ButtonControl(props) {\r\n  return (\r\n    <div className=\"button-control\">\r\n      <div className=\"label\">{props.ingredientLabel}</div>\r\n      <button className=\"more\" onClick={props.moreClick}>\r\n        More\r\n      </button>\r\n      <button\r\n        className=\"less\"\r\n        onClick={props.lessClick}\r\n        disabled={props.disableIngredient}\r\n      >\r\n        Less\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonControl;\r\n","import React from \"react\";\r\nimport \"./BuildControls.css\";\r\nimport ButtonControl from \"./ButtonControl/ButtonControl\";\r\nimport { BURGER_BASE_PRICE } from \"../constants\";\r\n\r\nconst ingredientControls = [\r\n  { ingredientLabel: \"Meat\", ingredientType: \"meat\" },\r\n  { ingredientLabel: \"Bacon\", ingredientType: \"bacon\" },\r\n  { ingredientLabel: \"Cheese\", ingredientType: \"cheese\" },\r\n  { ingredientLabel: \"Salad\", ingredientType: \"salad\" },\r\n];\r\n\r\nfunction BurgerControls(props) {\r\n  //Checks if the User is authenticated\r\n  let buttonCaption = \"Sign in to Order\";\r\n  if (props.isAuthenticated) buttonCaption = \"Order Now!\";\r\n\r\n  const orderReady = props.totalAmount > BURGER_BASE_PRICE;\r\n\r\n  return (\r\n    <div className=\"build-controls\">\r\n      <h2>TOTAL PRICE : {props.totalAmount.toFixed(2)}</h2>\r\n      {ingredientControls.map((element) => {\r\n        return (\r\n          <ButtonControl\r\n            key={element.ingredientType}\r\n            ingredientLabel={element.ingredientLabel}\r\n            disableIngredient={props.disableIngredient[element.ingredientType]}\r\n            moreClick={() => props.addIngredient(element.ingredientType)}\r\n            lessClick={() => props.removeIngredient(element.ingredientType)}\r\n          />\r\n        );\r\n      })}\r\n      <button\r\n        disabled={!orderReady}\r\n        onClick={props.burgerOrderHandle}\r\n        className=\"order-button\"\r\n      >\r\n        {buttonCaption}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerControls;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Ingredient.module.css\";\r\n\r\nclass Ingredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n    switch (this.props.ingredientType) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={classes.Meat}></div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={classes.Salad}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={classes.Bacon}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n        break;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\nIngredient.propTypes = {\r\n  ingredientType: PropTypes.string.isRequired,\r\n};\r\nexport default Ingredient;\r\n","import React from \"react\";\r\nimport Ingredient from \"./Ingredient/Ingredient\";\r\nimport \"./Burger.css\";\r\n\r\nconst Burger = (props) => {\r\n\r\n  let transformedIngredients = Object.keys(props.ingredientsList)\r\n    .map((ingredient) => {\r\n      return [...Array(props.ingredientsList[ingredient])].map((_, index) => {\r\n        return (\r\n          <Ingredient key={ingredient + index} ingredientType={ingredient} />\r\n        );\r\n      });\r\n    })\r\n    .reduce((newArray, item) => {\r\n      return newArray.concat(item);\r\n    }, []);\r\n\r\n  if (transformedIngredients.length === 0)\r\n    transformedIngredients = <p className=\"initial-state\">Add Ingredients</p>;\r\n\r\n  let styleOrderBurger = null;\r\n  if (props.orderPage) styleOrderBurger = { height: \"400px\" };\r\n  return (\r\n    <div className=\"Burger\" style={styleOrderBurger}>\r\n      <Ingredient ingredientType=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <Ingredient ingredientType=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction OrderDetails(props) {\r\n  const ingredientList = [];\r\n\r\n  for (let ingredient in props.ingredients) {\r\n    ingredientList.push({\r\n      name: ingredient,\r\n      amount: props.ingredients[ingredient],\r\n    });\r\n  }\r\n  const orderSummaryList = ingredientList.map((ing) => {\r\n    return (\r\n      <li\r\n        style={{ textTransform: \"capitalize\", textAlign: \"left\" }}\r\n        key={ing.name}\r\n      >\r\n        <strong>\r\n          {ing.name} : {ing.amount}\r\n        </strong>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>Order Summary</h2>\r\n      <p>Your delicious order contain following ingredients</p>\r\n      <ul style={{ listStyle: \"none\" }}>{orderSummaryList}</ul>\r\n      <h2 style={{ marginTop: \"40px\", color: \"red\" }}>\r\n        Total Price : {props.totalAmount.toFixed(2)}\r\n      </h2>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n//Redux Store\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerReducer.ingredients,\r\n    totalAmount: state.burgerReducer.totalPrice,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(OrderDetails);\r\n","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      className={[classes.Button, classes[props.buttonType]].join(\" \")}\r\n      onClick={props.clickHandler}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { Fragment } from \"react\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nfunction OrderSummary(props) {\r\n  return (\r\n    <Fragment>\r\n      <OrderDetails />\r\n      <Button buttonType=\"Success\" clickHandler={props.burgerPurchase}>\r\n        CONTINUE\r\n      </Button>\r\n      <Button buttonType=\"Danger\" clickHandler={props.cancelOrder}>\r\n        CANCEL\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default OrderSummary;\r\n","import React, { Fragment } from \"react\";\r\nimport BackDrop from \"../Backdrop/Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal(props) {\r\n  return props.orderBurger ? (\r\n    <Fragment>\r\n      <BackDrop cancelOrder={props.cancelOrder} />\r\n      <div className=\"Modal\">\r\n        <img src=\"images/cancel.png\" alt=\"cancel\" onClick={props.cancelOrder} />\r\n        {props.children}\r\n      </div>\r\n    </Fragment>\r\n  ) : null;\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport BurgerControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport \"./BurgerBuilder.css\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport {\r\n  addIngredient,\r\n  removeIngredient,\r\n  initIngredients,\r\n} from \"../../store/actions/burgerAction\";\r\nimport { initializeBurger } from \"../../store/actions/orderAction\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      orderBurger: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  //This method initialises the ingredients to 0\r\n  componentDidMount() {\r\n    this.props.initIngredients();\r\n  }\r\n  //This method handles the ordering of a Burger\r\n  burgerOrderHandler = () => {\r\n    if (this.props.isAuthenticated)\r\n      this.setState({\r\n        orderBurger: true,\r\n      });\r\n    else this.props.history.push(\"/auth\");\r\n  };\r\n\r\n  //This method handles the cancelling of a Burger Order\r\n  burgerCancelHandler = () => {\r\n    this.setState({\r\n      orderBurger: false,\r\n    });\r\n  };\r\n\r\n  //This method handles the purchasing of a Burger Order\r\n  burgerPurchaseHandler = () => {\r\n    this.props.initializeBurger();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n\r\n  render() {\r\n    //Checks if the LESS Button should be disabled\r\n    const isIngredientDisabled = {\r\n      ...this.props.ingredientsList,\r\n    };\r\n    for (let key in isIngredientDisabled) {\r\n      isIngredientDisabled[key] = isIngredientDisabled[key] <= 0;\r\n    }\r\n\r\n    //Checks if Spinner is needed\r\n    let orderSummary = (\r\n      <OrderSummary\r\n        ingredients={this.props.ingredientsList}\r\n        totalAmount={this.props.burgerAmount}\r\n        burgerPurchase={this.burgerPurchaseHandler}\r\n        cancelOrder={this.burgerCancelHandler}\r\n      />\r\n    );\r\n    if (this.state.isLoading) orderSummary = <Spinner />;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          orderBurger={this.state.orderBurger}\r\n          cancelOrder={this.burgerCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {this.props.isError ? (\r\n          <h2 className=\"error\">Something went wrong !</h2>\r\n        ) : null}\r\n        <div className=\"container\">\r\n          <Burger ingredientsList={this.props.ingredientsList} />\r\n          <BurgerControls\r\n            addIngredient={this.props.addIngredient}\r\n            removeIngredient={this.props.removeIngredient}\r\n            disableIngredient={isIngredientDisabled}\r\n            totalAmount={this.props.burgerAmount}\r\n            burgerOrderHandle={this.burgerOrderHandler}\r\n            isAuthenticated={this.props.isAuthenticated}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n//Redux Store\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredientsList: state.burgerReducer.ingredients,\r\n    burgerAmount: state.burgerReducer.totalPrice,\r\n    isError: state.burgerReducer.isError,\r\n    isAuthenticated: state.authReducer.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n  return {\r\n    addIngredient: (ingredientName) => dispatch(addIngredient(ingredientName)),\r\n    removeIngredient: (ingredientName) =>\r\n      dispatch(removeIngredient(ingredientName)),\r\n    initializeBurger: () => dispatch(initializeBurger()),\r\n    initIngredients: () => dispatch(initIngredients()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(BurgerBuilder);\r\n","import {\r\n  ADD_INGREDIENT,\r\n  REMOVE_INGREDIENT,\r\n  INITIALIZE_INGREDIENTS,\r\n} from \"./actionTypes\";\r\n\r\n//Adds a Ingredient to the Burger\r\nexport const addIngredient = (ingredient) => {\r\n  return {\r\n    type: ADD_INGREDIENT,\r\n    ingredientName: ingredient,\r\n  };\r\n};\r\n\r\n//Removes the Ingredient from the Burger\r\nexport const removeIngredient = (ingredient) => {\r\n  return {\r\n    type: REMOVE_INGREDIENT,\r\n    ingredientName: ingredient,\r\n  };\r\n};\r\n\r\n//Initializes the Ingredients to its initial state\r\nexport const initIngredients = () => {\r\n  return {\r\n    type: INITIALIZE_INGREDIENTS,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Burger from \"../Burger/Burger\";\r\nimport OrderDetails from \"../Burger/OrderSummary/OrderDetails\";\r\nimport \"./BurgerOrder.css\";\r\n\r\nfunction BurgerOrder(props) {\r\n  return (\r\n    <div className=\"course-body\">\r\n      <div className=\"course\">\r\n        <div className=\"course-preview\">\r\n          <h6>Your Delicious Burger</h6>\r\n          <div className=\"course-preview-image\">\r\n            <Burger ingredientsList={props.ingredients} orderPage={true} />\r\n          </div>\r\n        </div>\r\n        <div className=\"course-info\">\r\n          <div className=\"progress-container\"></div>\r\n          <div>\r\n            <OrderDetails\r\n              ingredients={props.ingredients}\r\n              totalAmount={props.totalAmount}\r\n            />\r\n          </div>\r\n          <div className=\"btn-container\">\r\n            <button onClick={props.clickContinue} className=\"btn\">\r\n              Continue\r\n            </button>\r\n            <button onClick={props.clickCancel} className=\"btn\">\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerOrder;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { purchaseBurger } from \"../../store/actions/orderAction\";\r\nimport \"./ContactPage.css\";\r\n\r\nconst validEmailRegex = RegExp(\r\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n);\r\n\r\n//To display the Error message\r\nconst errors = {\r\n  name: \"\",\r\n  email: \"\",\r\n  address: \"\",\r\n  phone: \"\",\r\n};\r\n\r\n//To validate if each input is valid\r\nconst validation = {\r\n  name: false,\r\n  email: false,\r\n  address: false,\r\n  phone: false,\r\n};\r\n\r\nclass ContactPage extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      customerName: \"\",\r\n      customerEmail: \"\",\r\n      customerAddress: \"\",\r\n      customerPhone: \"\",\r\n      deliveryType: \"Express\",\r\n      isFormValid: true,\r\n    };\r\n  }\r\n\r\n  //Handles the Customer Details in State\r\n  inputChangeHandler = (event) => {\r\n    let inputName = event.target.name;\r\n    this.setState({\r\n      [inputName]: event.target.value,\r\n    });\r\n    this.validationCheck(inputName, event.target.value);\r\n  };\r\n\r\n  //Handles the Validation of each input\r\n  validationCheck = (inputName, inputValue) => {\r\n    switch (inputName) {\r\n      case \"customerName\":\r\n        errors.name =\r\n          inputValue.length > 5\r\n            ? \"\"\r\n            : \"Full Name must be at least 6 characters long!\";\r\n        validation.name = errors.name.length > 0 ? false : true;\r\n        break;\r\n      case \"customerEmail\":\r\n        errors.email = validEmailRegex.test(inputValue)\r\n          ? \"\"\r\n          : \"Email is not valid!\";\r\n        validation.email = errors.email.length > 0 ? false : true;\r\n        break;\r\n      case \"customerAddress\":\r\n        errors.address =\r\n          inputValue.length > 11\r\n            ? \"\"\r\n            : \"Address must be at least 12 characters long!\";\r\n        validation.address = errors.address.length > 0 ? false : true;\r\n        break;\r\n      case \"customerPhone\":\r\n        errors.phone =\r\n          inputValue.length === 10\r\n            ? \"\"\r\n            : \"Phone Number must be 10 characters long!\";\r\n        validation.phone = errors.phone.length > 0 ? false : true;\r\n        break;\r\n      default:\r\n        errors.phone =\r\n          inputValue.length > 10\r\n            ? \"\"\r\n            : \"Phone Number must be 10 characters long!\";\r\n        break;\r\n    }\r\n\r\n    //Checks if the whole form is valid\r\n    let isValid = true;\r\n    for (const [key, value] of Object.entries(validation)) {\r\n      isValid = value && isValid;\r\n    }\r\n    this.setState({\r\n      isFormValid: isValid,\r\n    });\r\n  };\r\n\r\n  //Submits the Burger Order\r\n  orderBurger = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.isFormValid) {\r\n      const burgerOrder = {\r\n        ingredients: this.props.ingredientsList,\r\n        totalPrice: this.props.totalAmount,\r\n        customer: {\r\n          name: this.state.customerName,\r\n          address: this.state.customerAddress,\r\n          email: this.state.customerEmail,\r\n          phone: this.state.customerPhone,\r\n        },\r\n        deliveryType: this.state.deliveryType,\r\n        userId: this.props.userId,\r\n      };\r\n      this.props.purchaseBurger(burgerOrder, this.props.token);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let form = <Spinner />;\r\n    if (!this.props.isLoading)\r\n      form = (\r\n        <form onSubmit={this.orderBurger}>\r\n          <div className=\"contact-container\">\r\n            {errors.name.length > 0 && (\r\n              <span className=\"error\">{errors.name}</span>\r\n            )}\r\n            <input\r\n              type=\"text\"\r\n              id=\"customerName\"\r\n              name=\"customerName\"\r\n              placeholder=\"Your name..\"\r\n              value={this.state.customerName}\r\n              onChange={this.inputChangeHandler}\r\n              required\r\n            />\r\n\r\n            {errors.email.length > 0 && (\r\n              <span className=\"error\">{errors.email}</span>\r\n            )}\r\n            <input\r\n              type=\"text\"\r\n              id=\"customerEmail\"\r\n              name=\"customerEmail\"\r\n              placeholder=\"Your Email..\"\r\n              value={this.state.customerEmail}\r\n              onChange={this.inputChangeHandler}\r\n              required\r\n            />\r\n            {errors.phone.length > 0 && (\r\n              <span className=\"error\">{errors.phone}</span>\r\n            )}\r\n            <input\r\n              type=\"number\"\r\n              id=\"customerPhone\"\r\n              name=\"customerPhone\"\r\n              placeholder=\"Your Phone Number..\"\r\n              value={this.state.customerPhone}\r\n              onChange={this.inputChangeHandler}\r\n              required\r\n            />\r\n\r\n            <select\r\n              id=\"deliveryType\"\r\n              name=\"deliveryType\"\r\n              value={this.state.deliveryType}\r\n              onChange={this.inputChangeHandler}\r\n            >\r\n              <option value=\"express\">\r\n                Express Delivery(within 30minutes)\r\n              </option>\r\n              <option value=\"standard\">\r\n                Standard Delivery (within an hour)\r\n              </option>\r\n            </select>\r\n            {errors.address.length > 0 && (\r\n              <span className=\"error\">{errors.address}</span>\r\n            )}\r\n            <textarea\r\n              id=\"customerAddress\"\r\n              name=\"customerAddress\"\r\n              placeholder=\"Delivery Address.\"\r\n              style={{ height: \"200px\" }}\r\n              value={this.state.customerAddress}\r\n              onChange={this.inputChangeHandler}\r\n              required\r\n            ></textarea>\r\n            <input type=\"submit\" value=\"Order\" />\r\n          </div>\r\n        </form>\r\n      );\r\n    if (this.props.purchaseSuccess) form = <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h2>Enter the Delivery Details</h2>\r\n        <div className=\"delivery-contact-container\">\r\n          <div className=\"delivery-contact-container-image\"></div>\r\n          <div>{form}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Redux Store\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredientsList: state.burgerReducer.ingredients,\r\n    totalAmount: state.burgerReducer.totalPrice,\r\n    isLoading: state.orderReducer.isLoading,\r\n    purchaseSuccess: state.orderReducer.purchased,\r\n    token: state.authReducer.token,\r\n    userId: state.authReducer.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    purchaseBurger: (burgerOrder, token) =>\r\n      dispatch(purchaseBurger(burgerOrder, token)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { BURGER_BASE_PRICE } from \"../../components/Burger/constants\";\r\nimport BurgerOrder from \"../../components/Order/BurgerOrder\";\r\nimport ContactPage from \"../../components/Order/ContactPage\";\r\n\r\n\r\nclass Checkout extends Component {\r\n  //Handling the Cancel Order\r\n  clickCancel = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  //Handling the Order\r\n  clickContinue = () => {\r\n    this.props.history.replace(\"/checkout/delivery\");\r\n  };\r\n\r\n  render() {\r\n    let burgerOrder = <Redirect to=\"/\" />;\r\n\r\n    if (this.props.totalAmount !== BURGER_BASE_PRICE) {\r\n      //Redirects after Success Purchase\r\n      const purchaseRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n\r\n      burgerOrder = (\r\n        <div>\r\n          {purchaseRedirect}\r\n          <BurgerOrder\r\n            ingredients={this.props.ingredientsList}\r\n            totalAmount={this.props.totalAmount}\r\n            clickCancel={this.clickCancel}\r\n            clickContinue={this.clickContinue}\r\n          />\r\n          <Route path={\"/checkout/delivery\"} component={ContactPage} />\r\n        </div>\r\n      );\r\n      return burgerOrder;\r\n    }\r\n  }\r\n}\r\n\r\n//Redux Store\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredientsList: state.burgerReducer.ingredients,\r\n    totalAmount: state.burgerReducer.totalPrice,\r\n    purchased: state.orderReducer.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { logOut } from \"../../store/actions/authAction\";\r\n\r\nclass Logout extends Component {\r\n  //Removing Authentication Token and User ID\r\n  componentDidMount() {\r\n    this.props.signOut();\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\n//Redux Store\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(logOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Layout from \"./components/Layout/Layout\";\nimport PastOrders from \"./components/PastOrders/PastOrders\";\nimport Auth from \"./components/Auth/Auth\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport classes from \"./newStyle.module.css\";\nimport Logout from \"./components/Auth/Logout\";\nimport { authUserValid } from \"./store/actions/authAction\";\n\nclass App extends Component {\n  //Checks if the user is valid\n  componentDidMount() {\n    this.props.authUserValid();\n  }\n\n  render() {\n    //Routes depending on the user authentication\n    let routes = (\n      <Switch>\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/checkout\" component={Checkout} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.props.isAuthenticated)\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Route path=\"/orders\" exact component={PastOrders} />\n          <Route path=\"/signout\" component={Logout} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n\n    return (\n      <div className={classes.App}>\n        <header className={classes.Appheader}>\n          <Layout>{routes}</Layout>\n        </header>\n      </div>\n    );\n  }\n}\n\n//Redux Store\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.authReducer.token !== null,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    authUserValid: () => dispatch(authUserValid()),\n  };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  PURCHASE_BURGER_SUCCESS,\r\n  PURCHASE_BURGER_FAILED,\r\n  PURCHASE_BURGER_BEGIN,\r\n  INITIALIZE_BURGER,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  isLoading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //Handles the Spinner\r\n    case PURCHASE_BURGER_BEGIN:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        purchased: false,\r\n      };\r\n\r\n    //Handles a Successful Purchase\r\n    case PURCHASE_BURGER_SUCCESS:\r\n      const newOrder = {\r\n        ...action.orderData,\r\n        id: action.orderId,\r\n      };\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder),\r\n      };\r\n\r\n    //Handles a Failed Purchase\r\n    case PURCHASE_BURGER_FAILED:\r\n      return { ...state, isLoading: false };\r\n\r\n    //This Redirects to Main Page after success Purchase\r\n    case INITIALIZE_BURGER:\r\n      return { ...state, purchased: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderReducer;\r\n","import {\r\n  INGREDIENT_PRICES,\r\n  BURGER_BASE_PRICE,\r\n} from \"../../components/Burger/constants\";\r\nimport {\r\n  ADD_INGREDIENT,\r\n  INITIALIZE_INGREDIENTS,\r\n  REMOVE_INGREDIENT,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  ingredients: {\r\n    cheese: 0,\r\n    salad: 0,\r\n    bacon: 0,\r\n    meat: 0,\r\n  },\r\n  totalPrice: BURGER_BASE_PRICE,\r\n  isError: false,\r\n};\r\n\r\nconst burgerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //Adds a Ingredient to the Burger\r\n    case ADD_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n        },\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n      };\r\n\r\n    //Removes the Ingredient from the Burger\r\n    case REMOVE_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n        },\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n      };\r\n\r\n    //Initializes the Ingredients to its initial state\r\n    case INITIALIZE_INGREDIENTS:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          cheese: 0,\r\n          salad: 0,\r\n          bacon: 0,\r\n          meat: 0,\r\n        },\r\n        totalPrice: BURGER_BASE_PRICE,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default burgerReducer;\r\n","import {\r\n  AUTH_BEGIN,\r\n  AUTH_FAILED,\r\n  AUTH_SUCCESS,\r\n  AUTH_LOGOUT,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_BEGIN:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n    case AUTH_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        token: action.token,\r\n        userId: action.userId,\r\n        error: null,\r\n      };\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        token: null,\r\n        userId: null,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport orderReducer from \"./store/reducers/orderReducer\";\nimport burgerReducer from \"./store/reducers/burgerReducer\";\nimport authReducer from \"./store/reducers/authReducer\";\nimport thunk from \"redux-thunk\";\n\n//Chrome DevTools\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\n//Redux Store\nconst rootReducer = combineReducers({\n  orderReducer,\n  burgerReducer,\n  authReducer,\n});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}